1591095152324:(ns-in cljs-src.core)
1591095169952:(ns-in 'cljs-src.core)
1591095220724:(in-ns 'cljs-src.core)
1591095274433:@app-state
1591095942170:(conj (:lions :tigers) :bears)
1591095959883:(:lions :tigers)
1591095989813:(conj '(:lions :tigers) :bears)
1591096016302:([:lions :tigers])
1591096026886:[:lions :tigers]
1591098452670:(conj {:foo "bar" :boo "far"} [:foo "quux")
1591098460732:(conj {:foo "bar" :boo "far"} [:foo "quux"])
1591098542884:(conj {:foo "Bar"} [:bar "baz"])
1591098875010:(conj {:x 10 :y 12} [:z 7])
1591098887830:(conj {:x 10 :y 12} [:x 7])
1591099176021:(len [1 2 3])
1591099186339:(length [1 2 3])
1591099218367:(count [1 2 3 4])
1591099288495:(def samples [[1 2 3] [4 5 6 7] [8 9 0]])
1591099314000:(conj samples (map count samples))
1591101536153:(def cart {:name "Silicone Pancake Mold", :price 10.49})
1591105451870:(in-ns cljs-src.core)
1591105463299:(in-ns 'cljs-src.core)
1591105557243:(defn get-patients [] (GET 'http://localhost:3000/patients')\n)
1591105573951:(defn get-patients [] (GET "http://localhost:3000/patients"))
1591105583537:(get-patients)
1591105618322:(require '[ajax.core :refer [GET]])
1591105624013:(defn get-patients [] (GET "http://localhost:3000/patients"))
1591105635486:(get-patients)
1591105646036:(println get-patients)
1591105668321:(println (get-patients))
1591105681546:(println 'get-patients)
1591106829176:(defonce app-state (atom {:patients []}))
1591107083670:(require '[ajax.core :refer [GET]])
1591107119421:(defn get-patients [] (GET "http://localhost:3000/patients"))
1591107270050:(get-in get-patients [0])
1591107471283:(defn handle-response [resp] (println response))
1591107478199:(defn handle-response [resp] (println resp))
1591107557620:(defn get-patients [] (GET "http://localhost:3000/patients" {:handler handle-response }))
1591107565758:(get-patients)
1591107584593:('[1 2 3] 0)
1591107601424:(defn handle-response [resp] (println resp 0))
1591107607183:(defn get-patients [] (GET "http://localhost:3000/patients" {:handler handle-response }))
1591107614804:(get-patients)
1591107623668:(get-patients 0)
1591107678707:(defn get-patients [] (GET "http://localhost:3000/patients"))
1591107690382:(get-in get-patients 0)
1591107702163:(get-in get-patients [0])
1591107710147:(get-in get-patients [1])
1591107716788:(get-in get-patients [:fullname])
1591107816120:(defn get-patients [] (GET "http://ya.ru"))
1591107834141:(get-patients))
1591108178632:(defn get-patients [] (GET "http://localhost:3000/patients"))
1591108219570:(require '[ajax.core :refer [GET]])
1591108432599:(GET "https://localhost:3000/patients"\n         {:response-format :json\n          :keywords? true})
1591108546130:(defn get-patients [] (GET "https://localhost:3000/patients"\n         {:response-format :json\n          :keywords? true}))
1591108553784:(get-patients)
1591108562749:(get-patients [0])
1591108576042:(get-in get-patients [0])
1591110964196:(println get-patients)
1591110975288:(println 'get-patients)
1591111021817:(GET "https://localhost:3000/patients"\n         {:response-format :json\n          :keywords? true})
1591111256420:(println get-patients)
1591111263787:(get-in get-patients [0])
1591111343913:(doseq [x get-patients] (println x))
1591111369370:(doseq [x (GET "https://ya.ru"] (println x))
1591111385783:(doseq [x (GET "https://ya.ru")] (println x))
1591111600971:(require 'ajax.core :as ajax)
1591111614669:(require ['ajax.core :as ajax])
1591111627335:(require '[ajax.core :as ajax])
1591111679023:(defn handler [resp] (println resp))
1591111869183:(ajax/ajax-request {:uri "localhost:3000/patients" :method get :handler handler :format (ajax/json-request-format) :response-format (ajax/json-response-format {:keywords? true})})
1591111894026:(defn handle-response [resp] (println resp))
1591111913162:(ajax/ajax-request {:uri "localhost:3000/patients" :method get :handler handle-response :format (ajax/json-request-format) :response-format (ajax/json-response-format {:keywords? true})})
1591113011210:(in-ns cljs-src.core)
1591113020416:(in-ns 'cljs-src.core)
1591113261850:(get-patients)
1591116453141:(get-in get-patients [0])
1591116459492:(get-patients)
1591117070043:(def app-state\n  (atom {:all-pieces {}}))
1591117088198:(:patients app-state)
1591117101223:(defn pieces-handler [pcs]\n  (swap! app-state assoc :all-pieces pcs))
1591117132709:(defn fetch-pieces []\n  (GET "localhost:3000/patients" {:handler pieces-handler}))
1591117172087:(require '[ajax.core :refer [GET]])
1591117175255:(defn fetch-pieces []\n  (GET "localhost:3000/patients" {:handler pieces-handler}))
1591117185776:(fetch-pieces)
1591117195134:(app-state)
1591117223211:(@app-state)
1591117252157:(:all-pieces @app-state)
1591117400298:(GET "https://jsonplaceholder.typicode.com/posts")
1591117419261:(get-in (GET "https://jsonplaceholder.typicode.com/posts") [0])
1591120336558:(ns-in cljs-src.core)
1591120362022:(ns-in ['cljs-src.core])
1591120372122:(in-ns ['cljs-src.core])
1591120379009:(in-ns '[cljs-src.core])
1591120422263:(in-ns 'cljs-src.core)
1591120431104:get-patients
1591120439446:(get-patients)
1591121390285:(GET  "https://jsonplaceholder.typicode.com/posts")
1591132157012:(in-ns cljs-src.core)
1591132165949:(in-ns 'cljs-src.core)
1591132196917:(go (let [response (<! (http/get "https://api.github.com/users"\n                                 {:with-credentials? false\n                                  :query-params {"since" 135}}))]\n      (prn (:status response))\n      (prn (map :login (:body response)))))
1591132431390:(go (let [response (<! (http/get "https://api.github.com/users"\n                                 {:with-credentials? false\n                                  :query-params {"since" 135}}))]\n      (println (:status response))\n      (println (map :login (:body response)))))
1591132651411:(in-ns cljs-src.core)
1591132660726:(in-ns 'cljs-src.core)
1591132701308:(require 'cljs-src.core :as core)
1591132713532:(require ['cljs-src.core :as core])
1591132728908:(require '[cljs-src.core :as core])
1591132747419:(make-remote-call)
1591132774199:(make-remote-call "https://api.github.com/users")
1591133152308:(make-remote-call "https://localhost:3000/patients")
1591133446564:(make-remote-call "http://localhost:3000/patients")
1591134278929:(def s (atom ()))
1591134336175:(swap! s conj (1 2 3 4))
1591134341995:(swap! s conj (list 1 2 3 4))
1591134357826:(swap! s conj ('[1 2 3 4]))
1591134365243:(swap! s conj ([1 2 3 4]))
1591134637956:(swap! patients-atom conj (1 2 3 ))
1591134644075:(swap! patients-atom conj (list 1 2 3 ))
1591134653178:(@patients-atom)
1591134667950:@patients-atom
1591134760410:(make-remote-call "http://localhost:3000/patients")
1591134763514:@patients-atom
1591134788759:(make-remote-call "http://localhost:3000/patients")
1591134790527:@patients-atom
1591134825064:(make-remote-call "http://localhost:3000/patients")
1591134911213:@patients-atom
1591134928038:(make-remote-call "http://localhost:3000/patients")
1591134929806:@patients-atom
1591134961422:(make-remote-call "http://localhost:3000/patients")
1591134963109:@patients-atom
1591134990440:(make-remote-call "http://localhost:3000/patients")
1591134993583:@patients-atom
1591135080513:(make-remote-call "http://localhost:3000/patients")
1591135086493:@patients-atom
1591135094027:(make-remote-call "http://localhost:3000/patients")
1591135100915:@patients-atom
1591135101991:(make-remote-call "http://localhost:3000/patients")
1591135146591:(display-patient patients-atom [0])
1591135159449:(display-patient (patients-atom [0]))
1591135180464:(display-patient (@patients-atom 0))
1591135188454:@patients-atom
1591135254888:(doseq [patient @patients-atom] (println patient))
1591135300534:(doseq [patient [@patients-atom 0]] (println patient))
1591135323340:(doseq [patient (@patients-atom 0)] (println patient))
1591135336627:(doseq [patient (@patients-atom [0])] (println patient))
1591135346678:(doseq [patient @patients-atom] (println patient))
1591135373367:(doseq [patient @patients-atom] (println (count patient)))
1591135428874:(doseq [patient (first @patients-atom)] (println (count patient)))
1591135437909:(doseq [patient (first @patients-atom)] (println patient))
1591135679752:@patients-atom
1591135693315:(doseq [patient (first @patients-atom)]\n  (gdom/appendChild\n   patient-list\n   (gdom/createDom "li" #js {} (display-patient patient))))
1591135893583:@patients-atom
1591135900023:(doseq [patient (first @patients-atom)]\n  (gdom/appendChild\n   patient-list\n   (gdom/createDom "li" #js {} (display-patient patient))))
1591136693073:(app)
1591137540555:(in-ns cljs-src.core)
1591137545811:(in-ns 'cljs-src.core)
1591137558255:(make-remote-call "http://localhost:3000/patients")
1591137566264:@patients-atom
1591137595073:app()
1591137766868:@patients-atom
1591184089507:(in-ns cljs-src.core)
1591184095779:(in-ns 'cljs-src.core)
1591184114605:(page)
1591186933415:(println todos)
1591189419200:(println patients)
1591189444946:(ns-in 'cljs-src.core)
1591189453310:(in-ns 'cljs-src.core)
1591189461556:(patients)
1591189469906:(@patients)
1591189507135:(@patients-atom)
1591189515155:@patients
1591189556980:(add-patient {:fullname "Denis" :sex "male" :address "foobar" :insurance "barbaz123" :birthdate "1985-10-10"})
1591189626130:@patients
1591191209810:@patients-atom
1591191648734:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (println (:body response))))
1591191701098:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (println (first (:body response)))))
1591191731366:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (println (:body response))))
1591191748754:@patients
1591192088089:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))]\n      (for [p response] (println p))))
1591192134951:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))]\n      (for [p (:body response)] (println p))))
1591192177626:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))]\n      (for [p (:body response)] (println (:fullname p)))))
1591192191932:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (println (:body response))))
1591194195278:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (println {:keys [fullname]} (:body response))))
1591194515356:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (for [ x (:body response) ] (println x))))
1591194582284:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (doseq [ x (:body response) ] (println x))))
1591194623892:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (doseq [ x (:body response) ] (println (:keys x)))))
1591194643660:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (doseq [ x (:body response) ] (println (:fullname x)))))
1591194704649:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (doseq [ x (:body response) ] (println (:fullname x :address x :sex x :insurance x :birthdate x)))))
1591194753692:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (doseq [ x (:body response) ] (println ((:fullname x) (:address x) (:sex x) (:insurance x) (:birthdate x))))))
1591194927571:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (doseq [ x (:body response) ] (println(:fullname x)))))
1591195031238:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (for [ x (:body response) ] ( add-patient {:fullname (:fullname x) :sex (:sex x) :address (:address x) :insurance (:insurance x) :birthdate (:birthdate x)))))
1591195051942:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (for [ x (:body response) ] ( add-patient {:fullname (:fullname x) :sex (:sex x) :address (:address x) :insurance (:insurance x) :birthdate (:birthdate x)}))))
1591195071915:@patients
1591195127988:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (for [ x (:body response) ] ( add-patient {:fullname (:fullname x) :sex (:sex x) :address (:address x) :insurance (:insurance x) :birthdate (:birthdate x)}))))
1591195150651:(add-patient {:fullname "Denis" :sex "male" :address "foobar" :insurance "barbaz123" :birthdate "1985-10-17"})
1591195261643:(make-remote-call "he")
1591214778931:@patients
1591216152825:(swap! patients assoc-in [4 :fullname :address] ("foo" "baz"))
1591216883961:@patients [id]
1591216962478:(assoc @patients 4)
1591217839277:@patients
1591218155863:(format "http://localhost:3000/patients/id/%s" (:id {:id 1}))
1591218302084:(gstring/format "http://localhost:3000/patients/id/%s" (:id {:id 1}))
1591218934704:(@patient 1)
1591219015756:@patient (:id 1)
1591219052890:(get @patient 1)
1591219175254:@patients
1591219183848:@patients 6
1591219192870:(@patients 6)
1591219285386:(let [p (@patients 5)] (println (:fullname p)))
1591219309885:(let [p (@patients 5)] (println  p))
1591219576997:(let [p (@patients 5)] ((go (let [response (<! (http/get (gstring/format "http://localhost:3000/patients/id/%s" (:id p)) {:json-params p :with-credentials? false}))] (println (:body response ))))))
1591219634515:(go (let [response (<! (http/get "http://localhost:3000/patients" {:with-credentials? false}))] (println (:body response))))
1591219764986:(def pat {:id 5 :fullname "Denis Changed" :address "some add" :insurance "fo123bar" :birthdate "1985-12-11" :sex "male"})
1591219767681:(pat)
1591219771505:pat
1591219864442:(go (let [response (<! (http/put "http://localhost:3000/patients/id/5" {:json-params pat :with-credentials? false}))] (println (:body response))))
1591220374045:(go (let [response (<! (http/put "http://localhost:3000/patients/id/5" {:json-params {:id 5 :fullname "Densi cha" :sex "female" :addres "new address" :birthdate "1987-10-10"} :with-credentials? false}))] (println (:body response))))
1591220574135:(go (let [response (<! (http/put "http://localhost:3000/patients/id/5" {:transit-params {:id 5 :fullname "Densi cha" :sex "female" :addres "new address" :birthdate "1987-10-10"} :with-credentials? false}))] (println (:body response))))
1591220881932:(go (let [response (<! (http/put "http://localhost:3000/patients/id/5" {:json-params {:id 5 :fullname "Densi cha" :sex "female" :addres "new address" :birthdate "1987-10-10"}}))] (println (:body response))))
